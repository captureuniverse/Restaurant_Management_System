//
//  main.c
//  IT_Project
//
//  Created by karan hadiyal on 08/03/21.
//

#include <stdio.h>
#include <stdlib.h>
#include <time.h>


char all_items[22][13] = { "Indian Salad", "Mineral Water", "Papad", "Lassi", "French Fries", "Onion Rings", "Choco Cake", "Choco Muffin", "Shahi Paneer", "Dal Makhni", "Alooo Dum", "Mix Veg", "Plain Roti", "Butter Roti", "Aloo Nan", "Missi Roti", "Red Bull", "Monstar", "Pepsi", "Maza", "Chocolate", "Butterscotch"};   //storing all items

int price_all_items[22] = { 30, 20, 15, 40, 60, 40, 60, 60, 150, 125, 150, 180, 25, 30, 35, 35, 50, 50, 35, 30, 50, 35};        //price for all items

int order_items[22];        //items to be ordered
int order_quan[22];         //quantity of ordered items
int hot_fav[10];            //hot favourite items list
int discount[22];           //discount for all items


int a = 0, i = 0;

void design(void);         //for design
void food_menu(void);      //for food menu
void hot_fav_items(void);  //for hot favourite items
void order(void);          //for order
void bill(void);           //for bill
void modify(void);         //for edit


int main ()
{
    design();

    printf("\n\tFOOD MENU\n\n");        //showing menu part
    
    hot_fav_items();
    
    for (i = 0; i < 22; i+=2)
    {
        if ( i == 0 )
            printf("\nStarters\n");
        
        else if ( i == 4 )
            printf("\nSides\n");
        
        else if ( i == 8 )
            printf("\nMains\n");
        
        else if( i == 16 )
            printf("\nDrinks");
        
        printf("%d. %10s  %d ", i + 1, all_items[i], price_all_items[i]);
        printf("| %d. %10s  %d\n", i + 2, all_items[i+1], price_all_items[i+1]);
        
    }
    
    printf("\n\tOrder\n\n");
    order();

    return 0;
}


void design(void)           //for design
{
    int k = 1;        //for loop

    printf("-------------------------------------------------------");  //design starts
    printf("\n\t\t\tWelcome to Delicious Restaurant\n\n");
    for ( k = 1; k <= 11; k++)
    {
        printf("   * ");
    }
    printf("\n");
    
    for ( k = 1; k <= 11; k++)
    {
        printf("  * *");
    }
    printf("\n");
    
    for ( k = 1; k <= 11; k++)
    {
        printf("   * ");
    }
    printf("\n");       //design ends
}                  //function ends


void hot_fav_items(void)
{
    int x = 1, freq_resp[22] = {0}, freq;
    
    for ( x = 1; x <= 250; x++)
    {
        srand(rand());              //to generate different value
        freq = rand() % 22;     //generates values between 1 and 21 and stores it in freq
        freq_resp[freq]++;      //freq response of each freq i.e. 52 for 1, 26 for 2, etc.
    }
    
    
    for ( x = 1; x < 21; x++)       //to arrange in ascending order
    {
        
    }
}
void order(void)
{
    int num = 0, quan = 0;
    a = 0;
    
    while (a >= 0)
    {
    printf("Press the number written before item to order it and -1 to cancel\n");
    scanf("%d", &num);
        
        if(num == -1)
            break;
        
        order_items[a] = num - 1;
        
        
        printf("\nEnter number of quantities you want to add");
        scanf("%d", &quan);
        order_quan[a] = quan;
        
        a++;
        
    }
    
    if ( num == -1)
        exit(0);
    
    bill();
}

void bill(void)
{
    int i = 0, num = 0;
    
    for ( i = 0; i < a; i++)
    {
        printf("%d\t%s\t%d\t%d\n", i+1, all_items[order_items[i]], order_quan[i], order_quan[i] * price_all_items[order_items[i]]);
    }
    
    printf("\nPress 1 to edit quantity");
    scanf("%d", &num);
    
    if ( num == 1)
        modify();
}

void modify(void)
{
    int i, j, k = 0;
    
    while ( k != -1)
    {
    printf("Enter the number written before quantity to edit it");
    scanf("%d", &i);
    printf("\nEnter the final quantities you want to get");
    scanf("%d", &j);
        
        order_quan[i-1] = j;
        
    printf("\nPress -1 to end");
        scanf("%d", &k);
    }
    
    for ( i = 0; i < a; i++)
    {
        printf("%d\t%s\t%d\t%d\n", i+1, all_items[order_items[i]], order_quan[i], order_quan[i] * price_all_items[order_items[i]]);
    }
}
